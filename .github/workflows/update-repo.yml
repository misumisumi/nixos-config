name: Update repository
on:
  workflow_dispatch: # allows manual triggering
  schedule:
    - cron: "0 17 * * 5" # runs weekly on Saturday at 02:00 (JST)

jobs:
  update-repo:
    runs-on: ubuntu-latest
    outputs:
      pr-number: ${{ steps.update.outputs.pull-request-number }}
    steps:
      - uses: actions/checkout@v3.3.0

      - name: Generate GitHub Apps token
        id: generate
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Update flake lock
        id: update
        uses: DeterminateSystems/update-flake-lock@v20
        with:
          token: ${{ steps.generate.outputs.token }}
          commit-msg: "Update flake and package version"
          pr-title: "Update repository" # Title of PR to be created
          pr-labels: | # Labels to be set on the PR
            dependencies
            automated

  update-readme:
    runs-on: ubuntu-latest
    needs: update-repo
    steps:
      - name: Generate GitHub Apps token
        id: generate
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - uses: actions/checkout@v3.3.0
        if: needs.update-repo.result == 'success'
        with:
          fetch-depth: 2
          ref: "update_flake_lock_action"
          token: ${{ steps.generate.outputs.token }}

      - uses: cachix/install-nix-action@v20
        if: needs.update-repo.result == 'success'
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Update README
        id: update-readme
        if: needs.update-repo.result == 'success'
        run: ./scripts/update-readme.sh

      - name: Get last commit message
        id: last-commit-message
        if: needs.update-repo.result == 'success'
        run: |
          echo "msg=$(git log -1 --pretty=%s)" >> $GITHUB_OUTPUT

      - name: Commit README
        id: commit
        uses: stefanzweifel/git-auto-commit-action@v4
        if: needs.update-repo.result == 'success'
        with:
          push_options: "--force"
          commit_message: ${{ steps.last-commit-message.outputs.msg }}
          commit_options: "--amend --no-edit"
          skip_fetch: true
          file_pattern: "README.md _sources/*"
